
#:import main main
#:import ListAdapter kivy.adapters.listadapter.ListAdapter

WeatherRoot:

<WeatherRoot>:
    CoverPage:

<AddLocationForm>:   
    orientation:'vertical'
    search_input:search_box
    search_results:search_result_list
    #remember that the addlocationform inherits from the boxlayout 
    
    BoxLayout:
        height: "40dp"
        size_hint_y: None
        TextInput:
            id:search_box
            focus:True
            size_hint_x:50
            multiline:False
            on_text_validate:root.search_location()
        
        Button:
            size_hint_x: 25
            text: 'SEARCH'
            on_press: root.search_location()
        
        Button:
            size_hint_x: 25
            text:'CURRENT LOCATION'

    ListView:
        id:search_result_list
        adapter:
            ListAdapter(data=[],cls=main.LocationButton, args_converter=root.args_converter)

    BoxLayout:
        Button:
            height: "40dp"
            size_hint_y: None
            text: 'BACK TO HOME PAGE'
            on_press: app.root.show_cover_page()

<LocationButton>:
    text: '{} ({})'.format(self.location[0], self.location[1])
    height: "40dp"
    size_hint_y: None
    on_press:app.root.show_current_weather(self.text)

<Conditions>:
    Label:
        text: root.conditions

<UnknownConditions@Conditions>:
    
    canvas.before:
        Color:
            rgb: (0.2, 0.2, 0.2)
        Ellipse:
            pos: self.pos
            size: self.size

<ClearConditions@Conditions>:

    canvas.before:
        Color:
            rgb: (0.8, 0.7, 0.3)
        # Line:
        #     cap: 'round'
        #     width: 3
        #     points: (self.center_x - (self.height / 2),
        #         self.center_y,
        #         self.center_x + (self.height / 2),
        #         self.center_y)
        # Line:
        #     cap: 'round'
        #     width: 3
        #     points: (self.center_x,
        #         self.center_y - (self.height / 2),
        #         self.center_x ,
        #         self.center_y + (self.height / 2))
        # Line:
        #     cap: 'round'
        #     width: 3
        #     points: (self.center_x - (self.height * 0.35355),
        #         self.center_y - (self.height * 0.35355),
        #         self.center_x + (self.height * 0.35355),
        #         self.center_y + (self.height * 0.35355))
        # Line:
        #     cap: 'round'
        #     width: 3
        #     points: (self.center_x - (self.height * 0.35355),
        #         self.center_y + (self.height * 0.35355),
        #         self.center_x + (self.height * 0.35355),
        #         self.center_y - (self.height * 0.35355))
        Color:
            rgb: (0.6, 0.5, 0.0)
        Ellipse:
            pos: (self.center_x - ((self.height - 40) / 2), self.pos[1] + 20)
            size: (self.height - 40, self.height - 40)


<CurrentWeather>:
    orientation: 'vertical'

    BoxLayout:
        Label:
            text: '{} ({})'.format(root.location[0],root.location[1])
            font_size: "30dp"
        Label:
            text: '{} '.format(round(root.temp-273,1)) + root.symbol
            font_size: "30dp"
   
    BoxLayout:
        orientation: 'horizontal'
        Label:
            text: root.conditions
        AsyncImage:
            source: root.conditions_image   


    BoxLayout:
        orientation: 'horizontal'
        Label:
            text: 'Low: {} '.format(round(root.temp_min-273,1)) + root.symbol
        Label:
            text: 'High: {} '.format(round(root.temp_max-273,1)) + root.symbol
   
    BoxLayout:
        orientation: 'horizontal'
        size_hint_y: None
        height: "40dp"
        Button:
            text: 'ADD LOCATION'
            on_press: app.root.show_add_location_form()
        Button:
            text: 'FORECAST'

<CoverPage>:
    orientation:'vertical'

    Label:
        size_hint_y:0.91
        text:'Welcome to my Weather app'

    Button:
        text:'Enter to start'
        size_hint_y:0.09
        on_press: app.root.show_add_location_form()






